From 877ff7aa19244959bb71400180e3107c6b7fe8b3 Mon Sep 17 00:00:00 2001
From: Monty Taylor <mordred@inaugust.com>
Date: Thu, 22 Sep 2011 18:22:42 -0400
Subject: [PATCH] Fix outstanding pep8 errors for a clean trunk.

Also, add an option to run_tests.sh to skip running pep8. We have a separate
job in Jenkins which runs pep8, so there's no need to spin our wheels on it
during the test run.

(cherry picked from commit 21dcf669c72fddc7b26018388e678fe0b033e318)

Change-Id: I8b0185ad974bc1242ebbe0b9570d966dcbf60f1e
---
 nova/api/openstack/ips.py                          |    2 +-
 nova/compute/manager.py                            |    4 +-
 .../sqlalchemy/migrate_repo/versions/001_austin.py |   24 ++++++++++----------
 .../sqlalchemy/migrate_repo/versions/002_bexar.py  |   18 +++++++-------
 .../versions/003_add_label_to_networks.py          |    2 +-
 .../migrate_repo/versions/004_add_zone_tables.py   |    2 +-
 .../versions/005_add_instance_metadata.py          |    2 +-
 .../versions/008_add_instance_types.py             |   16 ++++++------
 .../versions/009_add_instance_migrations.py        |    2 +-
 .../versions/010_add_os_type_to_instances.py       |    2 +-
 .../migrate_repo/versions/011_live_migration.py    |    4 +-
 .../versions/012_add_ipv6_flatmanager.py           |    6 ++--
 .../014_add_instance_type_id_to_instances.py       |    2 +-
 .../versions/019_add_volume_snapshot_support.py    |    2 +-
 .../versions/024_add_block_device_mapping.py       |    4 +-
 .../migrate_repo/versions/026_add_agent_table.py   |    2 +-
 .../versions/027_add_provider_firewall_rules.py    |    8 +++---
 .../versions/029_add_zone_weight_offsets.py        |    2 +-
 .../migrate_repo/versions/030_multi_nic.py         |    2 +-
 .../versions/042_add_volume_types_and_extradata.py |    2 +-
 nova/tests/api/openstack/test_flavors.py           |    6 +++-
 nova/tests/api/openstack/test_servers.py           |    2 +-
 nova/tests/scheduler/test_scheduler.py             |    2 +-
 nova/tests/test_libvirt.py                         |   16 ++++++------
 nova/tests/test_network.py                         |    2 +-
 run_tests.sh                                       |   10 ++++++-
 26 files changed, 77 insertions(+), 69 deletions(-)

diff --git a/nova/api/openstack/ips.py b/nova/api/openstack/ips.py
index a74fae4..68d9218 100644
--- a/nova/api/openstack/ips.py
+++ b/nova/api/openstack/ips.py
@@ -148,7 +148,7 @@ def create_resource(version):
 
     metadata = {
         'list_collections': {
-            'public':  {'item_name': 'ip', 'item_key': 'addr'},
+            'public': {'item_name': 'ip', 'item_key': 'addr'},
             'private': {'item_name': 'ip', 'item_key': 'addr'},
         },
     }
diff --git a/nova/compute/manager.py b/nova/compute/manager.py
index 25d44e5..e575402 100644
--- a/nova/compute/manager.py
+++ b/nova/compute/manager.py
@@ -939,10 +939,10 @@ class ComputeManager(manager.SchedulerDependentManager):
                 {'instance_uuid': instance_ref['uuid'],
                  'source_compute': instance_ref['host'],
                  'dest_compute': FLAGS.host,
-                 'dest_host':   self.driver.get_host_ip_addr(),
+                 'dest_host': self.driver.get_host_ip_addr(),
                  'old_instance_type_id': old_instance_type['id'],
                  'new_instance_type_id': instance_type_id,
-                 'status':      'pre-migrating'})
+                 'status': 'pre-migrating'})
 
         LOG.audit(_('instance %s: migrating'), instance_ref['uuid'],
                 context=context)
diff --git a/nova/db/sqlalchemy/migrate_repo/versions/001_austin.py b/nova/db/sqlalchemy/migrate_repo/versions/001_austin.py
index 63bbacc..46ceb8b 100644
--- a/nova/db/sqlalchemy/migrate_repo/versions/001_austin.py
+++ b/nova/db/sqlalchemy/migrate_repo/versions/001_austin.py
@@ -52,7 +52,7 @@ export_devices = Table('export_devices', meta,
         Column('updated_at', DateTime(timezone=False)),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('shelf_id', Integer()),
         Column('blade_id', Integer()),
         Column('volume_id',
@@ -67,7 +67,7 @@ fixed_ips = Table('fixed_ips', meta,
         Column('updated_at', DateTime(timezone=False)),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('address',
                String(length=255, convert_unicode=False, assert_unicode=None,
                       unicode_error=None, _warn_on_bytestring=False)),
@@ -90,7 +90,7 @@ floating_ips = Table('floating_ips', meta,
         Column('updated_at', DateTime(timezone=False)),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('address',
                String(length=255, convert_unicode=False, assert_unicode=None,
                       unicode_error=None, _warn_on_bytestring=False)),
@@ -112,7 +112,7 @@ instances = Table('instances', meta,
         Column('updated_at', DateTime(timezone=False)),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('internal_id', Integer()),
         Column('admin_pass',
                String(length=255, convert_unicode=False, assert_unicode=None,
@@ -184,7 +184,7 @@ key_pairs = Table('key_pairs', meta,
         Column('updated_at', DateTime(timezone=False)),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('name',
                String(length=255, convert_unicode=False, assert_unicode=None,
                       unicode_error=None, _warn_on_bytestring=False)),
@@ -205,7 +205,7 @@ networks = Table('networks', meta,
         Column('updated_at', DateTime(timezone=False)),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('injected', Boolean(create_constraint=True, name=None)),
         Column('cidr',
                String(length=255, convert_unicode=False, assert_unicode=None,
@@ -273,7 +273,7 @@ quotas = Table('quotas', meta,
         Column('updated_at', DateTime(timezone=False)),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('project_id',
                String(length=255, convert_unicode=False, assert_unicode=None,
                       unicode_error=None, _warn_on_bytestring=False)),
@@ -290,7 +290,7 @@ security_groups = Table('security_groups', meta,
         Column('updated_at', DateTime(timezone=False)),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('name',
                String(length=255, convert_unicode=False, assert_unicode=None,
                       unicode_error=None, _warn_on_bytestring=False)),
@@ -324,7 +324,7 @@ security_group_rules = Table('security_group_rules', meta,
         Column('updated_at', DateTime(timezone=False)),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('parent_group_id',
                Integer(),
                ForeignKey('security_groups.id')),
@@ -347,7 +347,7 @@ services = Table('services', meta,
         Column('updated_at', DateTime(timezone=False)),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('host',
                String(length=255, convert_unicode=False, assert_unicode=None,
                       unicode_error=None, _warn_on_bytestring=False)),
@@ -357,7 +357,7 @@ services = Table('services', meta,
         Column('topic',
                String(length=255, convert_unicode=False, assert_unicode=None,
                       unicode_error=None, _warn_on_bytestring=False)),
-        Column('report_count', Integer(),  nullable=False),
+        Column('report_count', Integer(), nullable=False),
         Column('disabled', Boolean(create_constraint=True, name=None)),
         )
 
@@ -456,7 +456,7 @@ volumes = Table('volumes', meta,
         Column('updated_at', DateTime(timezone=False)),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('ec2_id',
                String(length=255, convert_unicode=False, assert_unicode=None,
                       unicode_error=None, _warn_on_bytestring=False)),
diff --git a/nova/db/sqlalchemy/migrate_repo/versions/002_bexar.py b/nova/db/sqlalchemy/migrate_repo/versions/002_bexar.py
index 9bb8a8a..f8ac9f6 100644
--- a/nova/db/sqlalchemy/migrate_repo/versions/002_bexar.py
+++ b/nova/db/sqlalchemy/migrate_repo/versions/002_bexar.py
@@ -25,21 +25,21 @@ meta = MetaData()
 # Just for the ForeignKey and column creation to succeed, these are not the
 # actual definitions of instances or services.
 instances = Table('instances', meta,
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         )
 
 
 services = Table('services', meta,
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         )
 
 
 networks = Table('networks', meta,
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         )
 
 volumes = Table('volumes', meta,
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         )
 
 
@@ -51,7 +51,7 @@ certificates = Table('certificates', meta,
         Column('updated_at', DateTime(timezone=False)),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('user_id',
                String(length=255, convert_unicode=False, assert_unicode=None,
                       unicode_error=None, _warn_on_bytestring=False)),
@@ -69,7 +69,7 @@ consoles = Table('consoles', meta,
         Column('updated_at', DateTime(timezone=False)),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('instance_name',
                String(length=255, convert_unicode=False, assert_unicode=None,
                       unicode_error=None, _warn_on_bytestring=False)),
@@ -89,7 +89,7 @@ console_pools = Table('console_pools', meta,
         Column('updated_at', DateTime(timezone=False)),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('address',
                String(length=255, convert_unicode=False, assert_unicode=None,
                       unicode_error=None, _warn_on_bytestring=False)),
@@ -119,7 +119,7 @@ instance_actions = Table('instance_actions', meta,
         Column('updated_at', DateTime(timezone=False)),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('instance_id',
                Integer(),
                ForeignKey('instances.id')),
@@ -137,7 +137,7 @@ iscsi_targets = Table('iscsi_targets', meta,
         Column('updated_at', DateTime(timezone=False)),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('target_num', Integer()),
         Column('host',
                String(length=255, convert_unicode=False, assert_unicode=None,
diff --git a/nova/db/sqlalchemy/migrate_repo/versions/003_add_label_to_networks.py b/nova/db/sqlalchemy/migrate_repo/versions/003_add_label_to_networks.py
index 8e0de4d..85a4563 100644
--- a/nova/db/sqlalchemy/migrate_repo/versions/003_add_label_to_networks.py
+++ b/nova/db/sqlalchemy/migrate_repo/versions/003_add_label_to_networks.py
@@ -20,7 +20,7 @@ from sqlalchemy import Column, Integer, MetaData, String, Table
 meta = MetaData()
 
 networks = Table('networks', meta,
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         )
 
 
diff --git a/nova/db/sqlalchemy/migrate_repo/versions/004_add_zone_tables.py b/nova/db/sqlalchemy/migrate_repo/versions/004_add_zone_tables.py
index 0abea37..9c2aeba 100644
--- a/nova/db/sqlalchemy/migrate_repo/versions/004_add_zone_tables.py
+++ b/nova/db/sqlalchemy/migrate_repo/versions/004_add_zone_tables.py
@@ -27,7 +27,7 @@ zones = Table('zones', meta,
         Column('updated_at', DateTime(timezone=False)),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('api_url',
                String(length=255, convert_unicode=False, assert_unicode=None,
                       unicode_error=None, _warn_on_bytestring=False)),
diff --git a/nova/db/sqlalchemy/migrate_repo/versions/005_add_instance_metadata.py b/nova/db/sqlalchemy/migrate_repo/versions/005_add_instance_metadata.py
index a1a86e3..5e3d09e 100644
--- a/nova/db/sqlalchemy/migrate_repo/versions/005_add_instance_metadata.py
+++ b/nova/db/sqlalchemy/migrate_repo/versions/005_add_instance_metadata.py
@@ -28,7 +28,7 @@ instances = Table('instances', meta,
         )
 
 quotas = Table('quotas', meta,
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         )
 
 
diff --git a/nova/db/sqlalchemy/migrate_repo/versions/008_add_instance_types.py b/nova/db/sqlalchemy/migrate_repo/versions/008_add_instance_types.py
index 63999f6..c8372e0 100644
--- a/nova/db/sqlalchemy/migrate_repo/versions/008_add_instance_types.py
+++ b/nova/db/sqlalchemy/migrate_repo/versions/008_add_instance_types.py
@@ -32,14 +32,14 @@ instance_types = Table('instance_types', meta,
                String(length=255, convert_unicode=False, assert_unicode=None,
                       unicode_error=None, _warn_on_bytestring=False),
                       unique=True),
-        Column('id', Integer(),  primary_key=True, nullable=False),
-        Column('memory_mb', Integer(),  nullable=False),
-        Column('vcpus', Integer(),  nullable=False),
-        Column('local_gb', Integer(),  nullable=False),
-        Column('flavorid', Integer(),  nullable=False, unique=True),
-        Column('swap', Integer(),  nullable=False, default=0),
-        Column('rxtx_quota', Integer(),  nullable=False, default=0),
-        Column('rxtx_cap', Integer(),  nullable=False, default=0))
+        Column('id', Integer(), primary_key=True, nullable=False),
+        Column('memory_mb', Integer(), nullable=False),
+        Column('vcpus', Integer(), nullable=False),
+        Column('local_gb', Integer(), nullable=False),
+        Column('flavorid', Integer(), nullable=False, unique=True),
+        Column('swap', Integer(), nullable=False, default=0),
+        Column('rxtx_quota', Integer(), nullable=False, default=0),
+        Column('rxtx_cap', Integer(), nullable=False, default=0))
 
 
 def upgrade(migrate_engine):
diff --git a/nova/db/sqlalchemy/migrate_repo/versions/009_add_instance_migrations.py b/nova/db/sqlalchemy/migrate_repo/versions/009_add_instance_migrations.py
index 0f2d007..2938bd5 100644
--- a/nova/db/sqlalchemy/migrate_repo/versions/009_add_instance_migrations.py
+++ b/nova/db/sqlalchemy/migrate_repo/versions/009_add_instance_migrations.py
@@ -24,7 +24,7 @@ meta = MetaData()
 # Just for the ForeignKey and column creation to succeed, these are not the
 # actual definitions of instances or services.
 instances = Table('instances', meta,
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         )
 
 #
diff --git a/nova/db/sqlalchemy/migrate_repo/versions/010_add_os_type_to_instances.py b/nova/db/sqlalchemy/migrate_repo/versions/010_add_os_type_to_instances.py
index a5b8058..49c09f8 100644
--- a/nova/db/sqlalchemy/migrate_repo/versions/010_add_os_type_to_instances.py
+++ b/nova/db/sqlalchemy/migrate_repo/versions/010_add_os_type_to_instances.py
@@ -19,7 +19,7 @@ from sqlalchemy import Column, Integer, MetaData, String, Table
 meta = MetaData()
 
 instances = Table('instances', meta,
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         )
 
 instances_os_type = Column('os_type',
diff --git a/nova/db/sqlalchemy/migrate_repo/versions/011_live_migration.py b/nova/db/sqlalchemy/migrate_repo/versions/011_live_migration.py
index b2b0256..438fd16 100644
--- a/nova/db/sqlalchemy/migrate_repo/versions/011_live_migration.py
+++ b/nova/db/sqlalchemy/migrate_repo/versions/011_live_migration.py
@@ -23,7 +23,7 @@ from nova import log as logging
 meta = MetaData()
 
 instances = Table('instances', meta,
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         )
 
 #
@@ -35,7 +35,7 @@ compute_nodes = Table('compute_nodes', meta,
         Column('updated_at', DateTime(timezone=False)),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('service_id', Integer(), nullable=False),
 
         Column('vcpus', Integer(), nullable=False),
diff --git a/nova/db/sqlalchemy/migrate_repo/versions/012_add_ipv6_flatmanager.py b/nova/db/sqlalchemy/migrate_repo/versions/012_add_ipv6_flatmanager.py
index 10d2505..30ae74b 100644
--- a/nova/db/sqlalchemy/migrate_repo/versions/012_add_ipv6_flatmanager.py
+++ b/nova/db/sqlalchemy/migrate_repo/versions/012_add_ipv6_flatmanager.py
@@ -23,7 +23,7 @@ meta = MetaData()
 # actual definitions of instances or services.
 #
 instances = Table('instances', meta,
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         )
 
 #
@@ -34,7 +34,7 @@ networks = Table('networks', meta,
         Column('updated_at', DateTime(timezone=False)),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('injected', Boolean(create_constraint=True, name=None)),
         Column('cidr',
                String(length=255, convert_unicode=False, assert_unicode=None,
@@ -89,7 +89,7 @@ fixed_ips = Table('fixed_ips', meta,
         Column('updated_at', DateTime(timezone=False)),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('address',
                String(length=255, convert_unicode=False, assert_unicode=None,
                       unicode_error=None, _warn_on_bytestring=False)),
diff --git a/nova/db/sqlalchemy/migrate_repo/versions/014_add_instance_type_id_to_instances.py b/nova/db/sqlalchemy/migrate_repo/versions/014_add_instance_type_id_to_instances.py
index 62216be..e5e3773 100644
--- a/nova/db/sqlalchemy/migrate_repo/versions/014_add_instance_type_id_to_instances.py
+++ b/nova/db/sqlalchemy/migrate_repo/versions/014_add_instance_type_id_to_instances.py
@@ -32,7 +32,7 @@ c_instance_type_id = Column('instance_type_id',
                            nullable=True)
 
 instance_types = Table('instance_types', meta,
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('name',
                String(length=255, convert_unicode=False, assert_unicode=None,
                       unicode_error=None, _warn_on_bytestring=False),
diff --git a/nova/db/sqlalchemy/migrate_repo/versions/019_add_volume_snapshot_support.py b/nova/db/sqlalchemy/migrate_repo/versions/019_add_volume_snapshot_support.py
index f16d6db..c5cf715 100644
--- a/nova/db/sqlalchemy/migrate_repo/versions/019_add_volume_snapshot_support.py
+++ b/nova/db/sqlalchemy/migrate_repo/versions/019_add_volume_snapshot_support.py
@@ -27,7 +27,7 @@ snapshots = Table('snapshots', meta,
         Column('updated_at', DateTime(timezone=False)),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('volume_id', Integer(), nullable=False),
         Column('user_id',
                String(length=255, convert_unicode=False, assert_unicode=None,
diff --git a/nova/db/sqlalchemy/migrate_repo/versions/024_add_block_device_mapping.py b/nova/db/sqlalchemy/migrate_repo/versions/024_add_block_device_mapping.py
index 6e9b806..b51cf80 100644
--- a/nova/db/sqlalchemy/migrate_repo/versions/024_add_block_device_mapping.py
+++ b/nova/db/sqlalchemy/migrate_repo/versions/024_add_block_device_mapping.py
@@ -27,11 +27,11 @@ instances = Table('instances', meta,
         )
 
 volumes = Table('volumes', meta,
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         )
 
 snapshots = Table('snapshots', meta,
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         )
 
 
diff --git a/nova/db/sqlalchemy/migrate_repo/versions/026_add_agent_table.py b/nova/db/sqlalchemy/migrate_repo/versions/026_add_agent_table.py
index 640e961..7eab136 100644
--- a/nova/db/sqlalchemy/migrate_repo/versions/026_add_agent_table.py
+++ b/nova/db/sqlalchemy/migrate_repo/versions/026_add_agent_table.py
@@ -27,7 +27,7 @@ builds = Table('agent_builds', meta,
         Column('updated_at', DateTime(timezone=False)),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('hypervisor',
                String(length=255, convert_unicode=False, assert_unicode=None,
                       unicode_error=None, _warn_on_bytestring=False)),
diff --git a/nova/db/sqlalchemy/migrate_repo/versions/027_add_provider_firewall_rules.py b/nova/db/sqlalchemy/migrate_repo/versions/027_add_provider_firewall_rules.py
index cb3c731..86475d6 100644
--- a/nova/db/sqlalchemy/migrate_repo/versions/027_add_provider_firewall_rules.py
+++ b/nova/db/sqlalchemy/migrate_repo/versions/027_add_provider_firewall_rules.py
@@ -28,17 +28,17 @@ meta = MetaData()
 # Just for the ForeignKey and column creation to succeed, these are not the
 # actual definitions of instances or services.
 instances = Table('instances', meta,
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         )
 
 
 services = Table('services', meta,
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         )
 
 
 networks = Table('networks', meta,
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         )
 
 
@@ -50,7 +50,7 @@ provider_fw_rules = Table('provider_fw_rules', meta,
         Column('updated_at', DateTime(timezone=False)),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('protocol',
                String(length=5, convert_unicode=False, assert_unicode=None,
                       unicode_error=None, _warn_on_bytestring=False)),
diff --git a/nova/db/sqlalchemy/migrate_repo/versions/029_add_zone_weight_offsets.py b/nova/db/sqlalchemy/migrate_repo/versions/029_add_zone_weight_offsets.py
index 1b7871e..c2be4f4 100644
--- a/nova/db/sqlalchemy/migrate_repo/versions/029_add_zone_weight_offsets.py
+++ b/nova/db/sqlalchemy/migrate_repo/versions/029_add_zone_weight_offsets.py
@@ -17,7 +17,7 @@ from sqlalchemy import Column, Float, Integer, MetaData, Table
 meta = MetaData()
 
 zones = Table('zones', meta,
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         )
 
 weight_offset = Column('weight_offset', Float(), default=0.0)
diff --git a/nova/db/sqlalchemy/migrate_repo/versions/030_multi_nic.py b/nova/db/sqlalchemy/migrate_repo/versions/030_multi_nic.py
index 4a117bb..7cb68b9 100644
--- a/nova/db/sqlalchemy/migrate_repo/versions/030_multi_nic.py
+++ b/nova/db/sqlalchemy/migrate_repo/versions/030_multi_nic.py
@@ -31,7 +31,7 @@ virtual_interfaces = Table('virtual_interfaces', meta,
                onupdate=utils.utcnow()),
         Column('deleted_at', DateTime(timezone=False)),
         Column('deleted', Boolean(create_constraint=True, name=None)),
-        Column('id', Integer(),  primary_key=True, nullable=False),
+        Column('id', Integer(), primary_key=True, nullable=False),
         Column('address',
                String(length=255, convert_unicode=False, assert_unicode=None,
                       unicode_error=None, _warn_on_bytestring=False),
diff --git a/nova/db/sqlalchemy/migrate_repo/versions/042_add_volume_types_and_extradata.py b/nova/db/sqlalchemy/migrate_repo/versions/042_add_volume_types_and_extradata.py
index dd4cccb..a69ca75 100644
--- a/nova/db/sqlalchemy/migrate_repo/versions/042_add_volume_types_and_extradata.py
+++ b/nova/db/sqlalchemy/migrate_repo/versions/042_add_volume_types_and_extradata.py
@@ -27,7 +27,7 @@ meta = MetaData()
 #
 
 volumes = Table('volumes', meta,
-       Column('id', Integer(),  primary_key=True, nullable=False),
+       Column('id', Integer(), primary_key=True, nullable=False),
        )
 
 volume_type_id = Column('volume_type_id', Integer(), nullable=True)
diff --git a/nova/tests/api/openstack/test_flavors.py b/nova/tests/api/openstack/test_flavors.py
index bd0a334..ff3155a 100644
--- a/nova/tests/api/openstack/test_flavors.py
+++ b/nova/tests/api/openstack/test_flavors.py
@@ -408,7 +408,8 @@ class FlavorsXMLSerializationTest(test.TestCase):
                             "href": "http://localhost/fake/flavors/23",
                         },
                     ],
-                },        {
+                },
+                {
                     "id": "13",
                     "name": "flavor 13",
                     "ram": "256",
@@ -492,7 +493,8 @@ class FlavorsXMLSerializationTest(test.TestCase):
                             "href": "http://localhost/fake/flavors/23",
                         },
                     ],
-                },        {
+                },
+                {
                     "id": "13",
                     "name": "flavor 13",
                     "ram": "256",
diff --git a/nova/tests/api/openstack/test_servers.py b/nova/tests/api/openstack/test_servers.py
index f0a1c5c..821a02e 100644
--- a/nova/tests/api/openstack/test_servers.py
+++ b/nova/tests/api/openstack/test_servers.py
@@ -696,7 +696,7 @@ class ServersTest(test.TestCase):
         self.assertEquals(ip.getAttribute('addr'), '1.2.3.4')
         (private,) = server.getElementsByTagName('private')
         (ip,) = private.getElementsByTagName('ip')
-        self.assertEquals(ip.getAttribute('addr'),  '192.168.0.3')
+        self.assertEquals(ip.getAttribute('addr'), '192.168.0.3')
 
     def test_get_server_by_id_with_addresses(self):
         private = "192.168.0.3"
diff --git a/nova/tests/scheduler/test_scheduler.py b/nova/tests/scheduler/test_scheduler.py
index 8903481..8fe0748 100644
--- a/nova/tests/scheduler/test_scheduler.py
+++ b/nova/tests/scheduler/test_scheduler.py
@@ -1064,7 +1064,7 @@ class ZoneRedirectTest(test.TestCase):
         self.assertEquals(decorator.get_collection_context_and_id(
             (None, 10, 20), {}), ("servers", 10, 20))
         self.assertEquals(decorator.get_collection_context_and_id(
-            (None, 11,),  dict(instance_id=21)), ("servers", 11, 21))
+            (None, 11,), dict(instance_id=21)), ("servers", 11, 21))
         self.assertEquals(decorator.get_collection_context_and_id(
             (None,), dict(context=12, instance_id=22)), ("servers", 12, 22))
 
diff --git a/nova/tests/test_libvirt.py b/nova/tests/test_libvirt.py
index 60da454..8d28590 100644
--- a/nova/tests/test_libvirt.py
+++ b/nova/tests/test_libvirt.py
@@ -200,14 +200,14 @@ class LibvirtConnTestCase(test.TestCase):
         self.call_libvirt_dependant_setup = False
         self.test_ip = '10.11.12.13'
 
-    test_instance = {'memory_kb':     '1024000',
-                     'basepath':      '/some/path',
-                     'bridge_name':   'br100',
-                     'vcpus':         2,
-                     'project_id':    'fake',
-                     'bridge':        'br101',
-                     'image_ref':     '123456',
-                     'local_gb':      20,
+    test_instance = {'memory_kb': '1024000',
+                     'basepath': '/some/path',
+                     'bridge_name': 'br100',
+                     'vcpus': 2,
+                     'project_id': 'fake',
+                     'bridge': 'br101',
+                     'image_ref': '123456',
+                     'local_gb': 20,
                      'instance_type_id': '5'}  # m1.small
 
     def lazy_load_library_exists(self):
diff --git a/nova/tests/test_network.py b/nova/tests/test_network.py
index 9c28c86..844aba2 100644
--- a/nova/tests/test_network.py
+++ b/nova/tests/test_network.py
@@ -503,7 +503,7 @@ class CommonNetworkTestCase(test.TestCase):
 
         class FakeDB:
             def fixed_ip_get_by_instance(self, context, instance_id):
-                return [dict(address='10.0.0.0'),  dict(address='10.0.0.1'),
+                return [dict(address='10.0.0.0'), dict(address='10.0.0.1'),
                         dict(address='10.0.0.2')]
 
             def network_get_by_cidr(self, context, cidr):
diff --git a/run_tests.sh b/run_tests.sh
index c1fda4c..b2567fe 100755
--- a/run_tests.sh
+++ b/run_tests.sh
@@ -13,6 +13,7 @@ function usage {
   echo "  -x, --stop               Stop running tests after the first error or failure."
   echo "  -f, --force              Force a clean re-build of the virtual environment. Useful when dependencies have been added."
   echo "  -p, --pep8               Just run pep8"
+  echo "  -P, --no-pep8            Don't run pep8"
   echo "  -c, --coverage           Generate coverage report"
   echo "  -h, --help               Print this usage message"
   echo "  --hide-elapsed           Don't print the elapsed time for each test along with slow test list"
@@ -32,6 +33,7 @@ function process_option {
     -n|--no-recreate-db) recreate_db=0;;
     -f|--force) force=1;;
     -p|--pep8) just_pep8=1;;
+    -P|--no-pep8) no_pep8=1;;
     -c|--coverage) coverage=1;;
     -*) noseopts="$noseopts $1";;
     *) noseargs="$noseargs $1"
@@ -47,6 +49,7 @@ noseargs=
 noseopts=
 wrapper=""
 just_pep8=0
+no_pep8=0
 coverage=0
 recreate_db=1
 
@@ -87,7 +90,8 @@ function run_pep8 {
   srcfiles+=" nova setup.py plugins/xenserver/xenapi/etc/xapi.d/plugins/glance"
   # Just run PEP8 in current environment
   ${wrapper} pep8 --repeat --show-pep8 --show-source \
-  --exclude=vcsversion.py ${srcfiles}
+    --ignore=E202 \
+    --exclude=vcsversion.py ${srcfiles}
 }
 
 NOSETESTS="python run_tests.py $noseopts $noseargs"
@@ -139,7 +143,9 @@ run_tests
 # distinguish between options (noseopts), which begin with a '-', and
 # arguments (noseargs).
 if [ -z "$noseargs" ]; then
-  run_pep8
+  if [ $no_pep8 -eq 0 ]; then
+    run_pep8
+  fi
 fi
 
 if [ $coverage -eq 1 ]; then
-- 
1.7.6.5

