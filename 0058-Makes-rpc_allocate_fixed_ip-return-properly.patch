From c5a13de64e6d67fa7a41ce48e3e1be31d283b45e Mon Sep 17 00:00:00 2001
From: Vishvananda Ishaya <vishvananda@gmail.com>
Date: Mon, 28 Nov 2011 14:42:38 -0800
Subject: [PATCH] Makes rpc_allocate_fixed_ip return properly

 * Fixes bug 855030
 * Includes test

Change-Id: If5b874fb0e4abd567445e67141d61942866cc5ec
---
 nova/network/manager.py    |    2 +-
 nova/tests/test_network.py |   33 +++++++++++++++++++++++++++++++++
 2 files changed, 34 insertions(+), 1 deletions(-)

diff --git a/nova/network/manager.py b/nova/network/manager.py
index c6155f2..4fa4d47 100644
--- a/nova/network/manager.py
+++ b/nova/network/manager.py
@@ -179,7 +179,7 @@ class RPCAllocateFixedIP(object):
         perform network lookup on the far side of rpc.
         """
         network = self.db.network_get(context, network_id)
-        self.allocate_fixed_ip(context, instance_id, network, **kwargs)
+        return self.allocate_fixed_ip(context, instance_id, network, **kwargs)
 
 
 class FloatingIP(object):
diff --git a/nova/tests/test_network.py b/nova/tests/test_network.py
index dbf934e..32502ea 100644
--- a/nova/tests/test_network.py
+++ b/nova/tests/test_network.py
@@ -731,6 +731,39 @@ class CommonNetworkTestCase(test.TestCase):
         self.assertTrue(manager.create_networks(*args))
 
 
+class TestRPCFixedManager(network_manager.RPCAllocateFixedIP,
+        network_manager.NetworkManager):
+    """Dummy manager that implements RPCAllocateFixedIP"""
+
+
+class RPCAllocateTestCase(test.TestCase):
+    """Tests nova.network.manager.RPCAllocateFixedIP"""
+    def setUp(self):
+        super(RPCAllocateTestCase, self).setUp()
+        self.rpc_fixed = TestRPCFixedManager()
+        self.context = context.RequestContext('fake', 'fake')
+
+    def test_rpc_allocate(self):
+        """Test to verify bug 855030 doesn't resurface.
+
+        Mekes sure _rpc_allocate_fixed_ip returns a value so the call
+        returns properly and the greenpool completes."""
+        address = '10.10.10.10'
+
+        def fake_allocate(*args, **kwargs):
+            return address
+
+        def fake_network_get(*args, **kwargs):
+            return {}
+
+        self.stubs.Set(self.rpc_fixed, 'allocate_fixed_ip', fake_allocate)
+        self.stubs.Set(self.rpc_fixed.db, 'network_get', fake_network_get)
+        rval = self.rpc_fixed._rpc_allocate_fixed_ip(self.context,
+                                                     'fake_instance',
+                                                     'fake_network')
+        self.assertEqual(rval, address)
+
+
 class TestFloatingIPManager(network_manager.FloatingIP,
         network_manager.NetworkManager):
     """Dummy manager that implements FloatingIP"""
-- 
1.7.6.5

