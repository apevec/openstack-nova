#!/bin/bash
#
# Copyright (C) 2011, Red Hat, Inc.
# Russell Bryant <rbryant@redhat.com>
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

usage() {
	echo "Set up a local MySQL database for use with openstack-nova."
	echo "This script will create a 'nova' database that is accessible"
	echo "only on localhost by user 'nova' with password 'nova'."
	echo "The setup of MySQL with a multi-server OpenStack installation"
	echo "is outside of the scope of this simple helper script."
	echo ""
	echo "Usage: openstack-nova-db-setup [options]"
	echo "Options:"
	echo "    --help|-h : Print usage information."
	exit 0
}

while [ $# -gt 0 ]
do
	case "$1" in
		-h|--help)
			usage
			;;
		*)
			# ignore
			shift
			;;
	esac
done


# Make sure MySQL is installed.

NEW_MYSQL_INSTALL=0
if ! rpm -q mysql-server > /dev/null
then
	printf "mysql-server is not installed.  Would you like to install it now? (y/n): "
	read response
	case "$response" in
		y|Y)
			yum install mysql-server
			NEW_MYSQL_INSTALL=1
			;;
		n|N)
			echo "mysql-server must be installed.  Please install it before proceeding."
			exit 0
			;;
		*)
			echo "Invalid response."
			exit 1
	esac
fi


# Make sure mysqld is running.

if ! service mysqld status > /dev/null
then
	printf "mysqld is not running.  Would you like to start it now? (y/n): "
	read response
	case "$response" in
		y|Y)
			service mysqld start
			;;
		n|N)
			echo "mysqld must be running.  Please start it before proceeding."
			exit 0
			;;
		*)
			echo "Invalid response."
			exit 1
	esac

fi


# Get MySQL root access.

PW=""
if [ $NEW_MYSQL_INSTALL -eq 1 ]
then
	echo "Since this is a fresh installation of MySQL, please set a password for the 'root' mysql user."

	PW_MATCH=0
	while [ $PW_MATCH -eq 0 ]
	do
		printf "Enter new password for 'root' mysql user: "
		read -s PW
		echo
		printf "Enter new password again: "
		read -s PW2
		echo
		if [ "$PW" = "$PW2" ]
		then
			PW_MATCH=1
		else
			echo "Passwords did not match."
		fi
	done

	echo "UPDATE mysql.user SET password = password('$PW') WHERE user = 'root'; DELETE FROM mysql.user WHERE user = ''; flush privileges;" | mysql -u root
	if ! [ $? -eq 0 ] ; then
		echo "Failed to set password for 'root' MySQL user."
		exit 1
	fi
else
	printf "Please enter the password for the 'root' MySQL user: "
	read -s PW
	echo
fi


# Sanity check MySQL credentials.

PW_ARG=""
if [ -n "$PW" ]
then
	PW_ARG="--password=$PW"
fi
echo "SELECT 1;" | mysql -u root $PW_ARG > /dev/null
if ! [ $? -eq 0 ]
then
	echo "Failed to connect to the MySQL server.  Please check your root user credentials."
	exit 1
fi
echo "Verified connectivity to MySQL."


# Now create the db.

echo "Creating 'nova' database."
cat << EOF | mysql -u root $PW_ARG
CREATE DATABASE nova;
CREATE USER 'nova'@'localhost' IDENTIFIED BY 'nova';
CREATE USER 'nova'@'%' IDENTIFIED BY 'nova';
GRANT ALL ON nova.* TO 'nova'@'%';
flush privileges;
EOF


# Ask openstack-nova to sync the db.

echo "Asking openstack-nova to sync the databse."
nova-manage db sync


# Do a final sanity check on the database.

echo "SELECT * FROM migrate_version;" | mysql -u nova --password=nova nova > /dev/null
if ! [ $? -eq 0 ]
then
	echo "Final sanity check failed.  File a bug report on bugzilla.redhat.com against the openstack-nova package."
	exit 1
fi

echo "Complete!"
