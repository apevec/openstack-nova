From 0ca35753f5f5a506162fde679ae7719d5d22f8e0 Mon Sep 17 00:00:00 2001
From: Ahmad Hassan <ahmad.hassan@hp.com>
Date: Wed, 5 Oct 2011 17:02:45 +0100
Subject: [PATCH 28/40] Make sure unknown extensions return 404

At the moment, if an extension doens't exist and we call a show method
with wrong id then the exception is not captured. There is a need to
return NOTFOUND exception.
Fixes bug 869153.

(cherry picked from commit 2915e6ba054b1f4100f788603358ea5b2b8220d5)

Change-Id: Ia20acf28389ca91308b62388e1e0d2fe4c227047
---
 nova/api/openstack/extensions.py            |    8 ++++++--
 nova/tests/api/openstack/test_extensions.py |    7 +++++++
 2 files changed, 13 insertions(+), 2 deletions(-)

diff --git a/nova/api/openstack/extensions.py b/nova/api/openstack/extensions.py
index efede94..a77a91b 100644
--- a/nova/api/openstack/extensions.py
+++ b/nova/api/openstack/extensions.py
@@ -195,8 +195,12 @@ class ExtensionsResource(wsgi.Resource):
         return dict(extensions=extensions)
 
     def show(self, req, id):
-        # NOTE(dprince): the extensions alias is used as the 'id' for show
-        ext = self.extension_manager.extensions[id]
+        try:
+            # NOTE(dprince): the extensions alias is used as the 'id' for show
+            ext = self.extension_manager.extensions[id]
+        except KeyError:
+            return faults.Fault(webob.exc.HTTPNotFound())
+
         return dict(extension=self._translate(ext))
 
     def delete(self, req, id):
diff --git a/nova/tests/api/openstack/test_extensions.py b/nova/tests/api/openstack/test_extensions.py
index 44f4eb0..0e9f9fa 100644
--- a/nova/tests/api/openstack/test_extensions.py
+++ b/nova/tests/api/openstack/test_extensions.py
@@ -146,6 +146,13 @@ class ExtensionControllerTest(test.TestCase):
                 "alias": "FOXNSOX",
                 "links": []})
 
+    def test_get_non_existing_extension_json(self):
+        app = openstack.APIRouterV11()
+        ext_midware = extensions.ExtensionMiddleware(app)
+        request = webob.Request.blank("/123/extensions/4")
+        response = request.get_response(ext_midware)
+        self.assertEqual(404, response.status_int)
+
     def test_list_extensions_xml(self):
         app = openstack.APIRouterV11()
         ext_midware = extensions.ExtensionMiddleware(app)
-- 
1.7.6.4

