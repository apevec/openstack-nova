From 0fe3b79461ee05ec67d2bd824a379c77fdf30ce5 Mon Sep 17 00:00:00 2001
From: Vishvananda Ishaya <vishvananda@gmail.com>
Date: Fri, 11 Nov 2011 11:37:03 -0800
Subject: [PATCH] Make run instances respect availability zone

 * includes test
 * fixes bug 888918
 * cherry picked from b6644ffe4360a9d55e138e20e0d453e8ffb2c718
 * test had to be updated

Change-Id: I40985e9dcc153fae53675f3da5e2d5b5763cfca3
---
 nova/api/ec2/cloud.py    |    2 +-
 nova/tests/test_cloud.py |   35 +++++++++++++++++++++++++++++++++++
 2 files changed, 36 insertions(+), 1 deletions(-)

diff --git a/nova/api/ec2/cloud.py b/nova/api/ec2/cloud.py
index b9fc7a0..79d603c 100644
--- a/nova/api/ec2/cloud.py
+++ b/nova/api/ec2/cloud.py
@@ -1398,7 +1398,7 @@ class CloudController(object):
             user_data=kwargs.get('user_data'),
             security_group=kwargs.get('security_group'),
             availability_zone=kwargs.get('placement', {}).get(
-                                  'AvailabilityZone'),
+                                  'availability_zone'),
             block_device_mapping=kwargs.get('block_device_mapping', {}))
         return self._format_run_instances(context,
                 reservation_id=instances[0]['reservation_id'])
diff --git a/nova/tests/test_cloud.py b/nova/tests/test_cloud.py
index cc85cbd..fa45974 100644
--- a/nova/tests/test_cloud.py
+++ b/nova/tests/test_cloud.py
@@ -1103,6 +1103,41 @@ class CloudTestCase(test.TestCase):
         self.assertEqual(instance['instanceState']['name'], 'running')
         self.assertEqual(instance['instanceType'], 'm1.small')
 
+    def test_run_instances_availability_zone(self):
+        kwargs = {'image_id': 'ami-00000001',
+                  'instance_type': FLAGS.default_instance_type,
+                  'max_count': 1,
+                  'placement': {'availability_zone': 'fake'},
+                 }
+        run_instances = self.cloud.run_instances
+
+        def fake_show(self, context, id):
+            return {'id': 'cedef40a-ed67-4d10-800e-17455edce175',
+                    'properties': {
+                        'kernel_id': 'cedef40a-ed67-4d10-800e-17455edce175',
+                        'type': 'machine'},
+                    'container_format': 'ami',
+                    'status': 'active'}
+
+        self.stubs.Set(fake._FakeImageService, 'show', fake_show)
+        # NOTE(comstud): Make 'cast' behave like a 'call' which will
+        # ensure that operations complete
+        self.stubs.Set(rpc, 'cast', rpc.call)
+
+        def fake_format(*args, **kwargs):
+            pass
+
+        self.stubs.Set(self.cloud, '_format_run_instances', fake_format)
+
+        def fake_create(*args, **kwargs):
+            self.assertEqual(kwargs['availability_zone'], 'fake')
+            return ([{'id': 'fake-instance', 'reservation_id': 'fake-res-id'}])
+
+        self.stubs.Set(self.cloud.compute_api, 'create', fake_create)
+
+        # NOTE(vish) the assert for this call is in the fake_create method.
+        run_instances(self.context, **kwargs)
+
     def test_run_instances_image_state_none(self):
         kwargs = {'image_id': FLAGS.default_image,
                   'instance_type': FLAGS.default_instance_type,
-- 
1.7.6.5

