From bdcc6e61846fd3f9d247206bc7ea67e8dd361fe6 Mon Sep 17 00:00:00 2001
From: David Subiros <david.perez5@hp.com>
Date: Wed, 30 Nov 2011 09:45:23 +0000
Subject: [PATCH] Fixing snapshot failure task_state

fixes bug 898162
If a snapshot fails now the instance task_state is set back to None.

Change-Id: I5ed8850a35aea901adf253f3f4adc590efd3a075
---
 nova/compute/manager.py    |    6 ++++--
 nova/tests/test_compute.py |   28 ++++++++++++++++++++++++++++
 2 files changed, 32 insertions(+), 2 deletions(-)

diff --git a/nova/compute/manager.py b/nova/compute/manager.py
index b926eac..98878f3 100644
--- a/nova/compute/manager.py
+++ b/nova/compute/manager.py
@@ -683,8 +683,10 @@ class ComputeManager(manager.SchedulerDependentManager):
                        'instance: %(instance_id)s (state: %(state)s '
                        'expected: %(running)s)') % locals())
 
-        self.driver.snapshot(context, instance_ref, image_id)
-        self._instance_update(context, instance_id, task_state=None)
+        try:
+            self.driver.snapshot(context, instance_ref, image_id)
+        finally:
+            self._instance_update(context, instance_id, task_state=None)
 
         if image_type == 'snapshot' and rotation:
             raise exception.ImageRotationNotAllowed()
diff --git a/nova/tests/test_compute.py b/nova/tests/test_compute.py
index c6747d0..f8c5b2c 100644
--- a/nova/tests/test_compute.py
+++ b/nova/tests/test_compute.py
@@ -387,6 +387,34 @@ class ComputeTestCase(test.TestCase):
 
         db.instance_destroy(self.context, instance_id)
 
+    def test_snapshot_fails(self):
+        """Ensure task_state is set to None if snapshot fails"""
+        def fake_snapshot(*args, **kwargs):
+            raise Exception("I don't want to create a snapshot")
+
+        self.stubs.Set(self.compute.driver, 'snapshot', fake_snapshot)
+
+        instance_id = self._create_instance()
+        self.compute.run_instance(self.context, instance_id)
+        self.assertRaises(Exception, self.compute.snapshot_instance,
+                          self.context, instance_id, "failing_snapshot")
+        self._assert_state({'task_state': None})
+        self.compute.terminate_instance(self.context, instance_id)
+
+    def _assert_state(self, state_dict):
+        """Assert state of VM is equal to state passed as parameter"""
+        instances = db.instance_get_all(context.get_admin_context())
+        self.assertEqual(len(instances), 1)
+
+        if 'vm_state' in state_dict:
+            self.assertEqual(state_dict['vm_state'], instances[0]['vm_state'])
+        if 'task_state' in state_dict:
+            self.assertEqual(state_dict['task_state'],
+                             instances[0]['task_state'])
+        if 'power_state' in state_dict:
+            self.assertEqual(state_dict['power_state'],
+                             instances[0]['power_state'])
+
     def test_console_output(self):
         """Make sure we can get console output from instance"""
         instance_id = self._create_instance()
-- 
1.7.6.5

